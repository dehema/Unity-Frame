
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace Rain.Core
{
public sealed partial class UnitConfig : Luban.BeanBase
{
    public UnitConfig(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["UnitType"].IsNumber) { throw new SerializationException(); }  UnitType = (UnitType)_buf["UnitType"].AsInt; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["hp"].IsNumber) { throw new SerializationException(); }  Hp = _buf["hp"]; }
        { if(!_buf["moveSpeed"].IsNumber) { throw new SerializationException(); }  MoveSpeed = _buf["moveSpeed"]; }
        { if(!_buf["attack"].IsNumber) { throw new SerializationException(); }  Attack = _buf["attack"]; }
        { if(!_buf["attackInterval"].IsNumber) { throw new SerializationException(); }  AttackInterval = _buf["attackInterval"]; }
        { if(!_buf["attackRange"].IsNumber) { throw new SerializationException(); }  AttackRange = _buf["attackRange"]; }
        { if(!_buf["attackHurtTime"].IsNumber) { throw new SerializationException(); }  AttackHurtTime = _buf["attackHurtTime"]; }
        { if(!_buf["attackDuration"].IsNumber) { throw new SerializationException(); }  AttackDuration = _buf["attackDuration"]; }
        { if(!_buf["angularSpeed"].IsNumber) { throw new SerializationException(); }  AngularSpeed = _buf["angularSpeed"]; }
        { if(!_buf["height"].IsNumber) { throw new SerializationException(); }  Height = _buf["height"]; }
        { if(!_buf["value"].IsNumber) { throw new SerializationException(); }  Value = _buf["value"]; }
        { if(!_buf["value_pre"].IsNumber) { throw new SerializationException(); }  ValuePre = _buf["value_pre"]; }
        { if(!_buf["upkeep"].IsNumber) { throw new SerializationException(); }  Upkeep = _buf["upkeep"]; }
        { if(!_buf["race"].IsString) { throw new SerializationException(); }  Race = _buf["race"]; }
        { if(!_buf["fullID"].IsString) { throw new SerializationException(); }  FullID = _buf["fullID"]; }
        { if(!_buf["modleRadius"].IsNumber) { throw new SerializationException(); }  ModleRadius = _buf["modleRadius"]; }
    }

    public static UnitConfig DeserializeUnitConfig(JSONNode _buf)
    {
        return new UnitConfig(_buf);
    }

    /// <summary>
    /// ID <br/>第1位是种族ID<br/>第2位是兵种类型<br/>34位是分类
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 兵种类型
    /// </summary>
    public readonly UnitType UnitType;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 生命值
    /// </summary>
    public readonly int Hp;
    /// <summary>
    /// 移动速度
    /// </summary>
    public readonly float MoveSpeed;
    /// <summary>
    /// 攻击力
    /// </summary>
    public readonly int Attack;
    /// <summary>
    /// 攻击间隔
    /// </summary>
    public readonly float AttackInterval;
    /// <summary>
    /// 攻击距离
    /// </summary>
    public readonly float AttackRange;
    /// <summary>
    /// 攻击敌人后<br/>对方多久受伤
    /// </summary>
    public readonly float AttackHurtTime;
    /// <summary>
    /// 攻击动画时长
    /// </summary>
    public readonly float AttackDuration;
    /// <summary>
    /// 转向速度
    /// </summary>
    public readonly float AngularSpeed;
    /// <summary>
    /// 模型高度
    /// </summary>
    public readonly float Height;
    /// <summary>
    /// 价值/招募价格
    /// </summary>
    public readonly int Value;
    /// <summary>
    /// 每级价值增长
    /// </summary>
    public readonly int ValuePre;
    /// <summary>
    /// 维护费
    /// </summary>
    public readonly int Upkeep;
    /// <summary>
    /// 种族
    /// </summary>
    public readonly string Race;
    /// <summary>
    /// ID全名
    /// </summary>
    public readonly string FullID;
    /// <summary>
    /// 模型半径
    /// </summary>
    public readonly float ModleRadius;
   
    public const int __ID__ = -568528378;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "UnitType:" + UnitType + ","
        + "name:" + Name + ","
        + "hp:" + Hp + ","
        + "moveSpeed:" + MoveSpeed + ","
        + "attack:" + Attack + ","
        + "attackInterval:" + AttackInterval + ","
        + "attackRange:" + AttackRange + ","
        + "attackHurtTime:" + AttackHurtTime + ","
        + "attackDuration:" + AttackDuration + ","
        + "angularSpeed:" + AngularSpeed + ","
        + "height:" + Height + ","
        + "value:" + Value + ","
        + "valuePre:" + ValuePre + ","
        + "upkeep:" + Upkeep + ","
        + "race:" + Race + ","
        + "fullID:" + FullID + ","
        + "modleRadius:" + ModleRadius + ","
        + "}";
    }
}
}

