
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace Rain.Core
{
public sealed partial class CityBuildingLevelConfig : Luban.BeanBase
{
    public CityBuildingLevelConfig(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsString) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["buildingID"].IsNumber) { throw new SerializationException(); }  BuildingID = (CityBuildingType)_buf["buildingID"].AsInt; }
        { if(!_buf["level"].IsNumber) { throw new SerializationException(); }  Level = _buf["level"]; }
        { if(!_buf["costTime"].IsNumber) { throw new SerializationException(); }  CostTime = _buf["costTime"]; }
        { var __json0 = _buf["costRes"]; if(!__json0.IsArray) { throw new SerializationException(); } CostRes = new System.Collections.Generic.Dictionary<int, int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int _k0;  { if(!__e0[0].IsNumber) { throw new SerializationException(); }  _k0 = __e0[0]; } int _v0;  { if(!__e0[1].IsNumber) { throw new SerializationException(); }  _v0 = __e0[1]; }  CostRes.Add(_k0, _v0); }   }
        { var __json0 = _buf["unlockCondition"]; if(!__json0.IsArray) { throw new SerializationException(); } UnlockCondition = new System.Collections.Generic.Dictionary<CityBuildingType, int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { CityBuildingType _k0;  { if(!__e0[0].IsNumber) { throw new SerializationException(); }  _k0 = (CityBuildingType)__e0[0].AsInt; } int _v0;  { if(!__e0[1].IsNumber) { throw new SerializationException(); }  _v0 = __e0[1]; }  UnlockCondition.Add(_k0, _v0); }   }
        { if(!_buf["BuildingModel"].IsString) { throw new SerializationException(); }  BuildingModel = _buf["BuildingModel"]; }
    }

    public static CityBuildingLevelConfig DeserializeCityBuildingLevelConfig(JSONNode _buf)
    {
        return new CityBuildingLevelConfig(_buf);
    }

    public readonly string ID;
    public readonly CityBuildingType BuildingID;
    /// <summary>
    /// 建筑等级
    /// </summary>
    public readonly int Level;
    /// <summary>
    /// 花费时间
    /// </summary>
    public readonly int CostTime;
    /// <summary>
    /// 资源ID，数量
    /// </summary>
    public readonly System.Collections.Generic.Dictionary<int, int> CostRes;
    /// <summary>
    /// 解锁条件(ID,lv)
    /// </summary>
    public readonly System.Collections.Generic.Dictionary<CityBuildingType, int> UnlockCondition;
    /// <summary>
    /// 建筑模型路径
    /// </summary>
    public readonly string BuildingModel;
   
    public const int __ID__ = -387255033;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "buildingID:" + BuildingID + ","
        + "level:" + Level + ","
        + "costTime:" + CostTime + ","
        + "costRes:" + Luban.StringUtil.CollectionToString(CostRes) + ","
        + "unlockCondition:" + Luban.StringUtil.CollectionToString(UnlockCondition) + ","
        + "BuildingModel:" + BuildingModel + ","
        + "}";
    }
}
}

