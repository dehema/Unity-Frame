
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace Rain.Core
{
public sealed partial class TechConfig : Luban.BeanBase
{
    public TechConfig(JSONNode _buf) 
    {
        { if(!_buf["techID"].IsString) { throw new SerializationException(); }  TechID = _buf["techID"]; }
        { if(!_buf["techName"].IsString) { throw new SerializationException(); }  TechName = _buf["techName"]; }
        { if(!_buf["techCategory"].IsNumber) { throw new SerializationException(); }  TechCategory = (TechCategory)_buf["techCategory"].AsInt; }
        { if(!_buf["techLevel"].IsNumber) { throw new SerializationException(); }  TechLevel = _buf["techLevel"]; }
        { var __json0 = _buf["preTechs"]; if(!__json0.IsArray) { throw new SerializationException(); } PreTechs = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  PreTechs.Add(__v0); }   }
        { var __json0 = _buf["nextTechs"]; if(!__json0.IsArray) { throw new SerializationException(); } NextTechs = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  NextTechs.Add(__v0); }   }
        { if(!_buf["unlockCondition"].IsString) { throw new SerializationException(); }  UnlockCondition = _buf["unlockCondition"]; }
        { if(!_buf["coreEffect"].IsString) { throw new SerializationException(); }  CoreEffect = _buf["coreEffect"]; }
        { if(!_buf["extraEffect"].IsString) { throw new SerializationException(); }  ExtraEffect = _buf["extraEffect"]; }
        { if(!_buf["researchTime"].IsString) { throw new SerializationException(); }  ResearchTime = _buf["researchTime"]; }
        { if(!_buf["iconPlaceholder"].IsString) { throw new SerializationException(); }  IconPlaceholder = _buf["iconPlaceholder"]; }
    }

    public static TechConfig DeserializeTechConfig(JSONNode _buf)
    {
        return new TechConfig(_buf);
    }

    /// <summary>
    /// 科技 ID
    /// </summary>
    public readonly string TechID;
    /// <summary>
    /// 科技名称
    /// </summary>
    public readonly string TechName;
    /// <summary>
    /// 所属分类
    /// </summary>
    public readonly TechCategory TechCategory;
    /// <summary>
    /// 科技等级
    /// </summary>
    public readonly int TechLevel;
    /// <summary>
    /// 前置科技
    /// </summary>
    public readonly System.Collections.Generic.List<string> PreTechs;
    /// <summary>
    /// 后置科技
    /// </summary>
    public readonly System.Collections.Generic.List<string> NextTechs;
    /// <summary>
    /// 解锁条件
    /// </summary>
    public readonly string UnlockCondition;
    /// <summary>
    /// 核心效果
    /// </summary>
    public readonly string CoreEffect;
    /// <summary>
    /// 额外效果（可选）
    /// </summary>
    public readonly string ExtraEffect;
    /// <summary>
    /// 研究耗时
    /// </summary>
    public readonly string ResearchTime;
    /// <summary>
    /// 图标占位（备用）
    /// </summary>
    public readonly string IconPlaceholder;
   
    public const int __ID__ = -916863592;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "techID:" + TechID + ","
        + "techName:" + TechName + ","
        + "techCategory:" + TechCategory + ","
        + "techLevel:" + TechLevel + ","
        + "preTechs:" + Luban.StringUtil.CollectionToString(PreTechs) + ","
        + "nextTechs:" + Luban.StringUtil.CollectionToString(NextTechs) + ","
        + "unlockCondition:" + UnlockCondition + ","
        + "coreEffect:" + CoreEffect + ","
        + "extraEffect:" + ExtraEffect + ","
        + "researchTime:" + ResearchTime + ","
        + "iconPlaceholder:" + IconPlaceholder + ","
        + "}";
    }
}
}

